@page "/reportdata"
@using EstdCoReportApp.Application.Domain;
@using Microsoft.AspNetCore.SignalR.Client;
@inject HttpClient Http

<PageTitle>جدول با اطلاعات لحظه ای</PageTitle>

<div class="alert alert-success" role="alert">
    <h4 class="alert-heading">جدول با اطلاعات لحظه ای!</h4>
    <p>این اطلاعات  با استفاده از داده های تصادفی به صورت لحظه به روز رسانی می گردند.</p>
    <hr>
    <p class="mb-0">داده ها تصادفی می باشند.</p>
</div>

@if (reports == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Id</th>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in reports)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.Id</td>
                    <td>@forecast.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Report>? reports;
    private HubConnection? _reportDataHubConnection;
    private async Task StartHubConnection()
    {
        var apiAddress = "https://localhost:7119";


        var sensorDataUrl = ($"{apiAddress}/reports");
        _reportDataHubConnection = new HubConnectionBuilder()
                        .WithUrl(sensorDataUrl)
                        .Build();


        await _reportDataHubConnection.StartAsync();
    }
    private void SetRefreshDataListener()
    {
        var methodName = "TransferReportData";


        _reportDataHubConnection.On<List<Report>>(methodName, (data) =>
        {
            reports = data;
            StateHasChanged();
        });
    }
    protected override async Task OnInitializedAsync()
    {
        await StartHubConnection();
        SetRefreshDataListener();
    }
}
